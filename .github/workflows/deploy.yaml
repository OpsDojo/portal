name: Deploy
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (e.g., v1.2.3)'
        required: true
        type: string
      bicep_version:
        description: Bicep module version
        required: true
        default: v1

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read  # To pull containers
    env:
      API_CONTAINER: ghcr.io/opsdojo/portal-api:${{ inputs.version }}
      UI_CONTAINER: ghcr.io/opsdojo/portal-ui:${{ inputs.version }}

    steps:

    - name: Checkout self
      uses: actions/checkout@v4
      with:
        path: workspace/self

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify container images
      run: |
        docker manifest inspect $API_CONTAINER || exit 1
        docker manifest inspect $UI_CONTAINER || exit 1

    - name: Checkout bicep modules
      uses: actions/checkout@v4
      with:
        repository: opsdojo/common-bicep
        ref: ${{ inputs.bicep_version }}
        path: workspace/common-bicep
        token: ${{ secrets.PAT_COMMON_READ }}

    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_SCM_CREDS }}

    - name: Deploy iac
      uses: azure/bicep-deploy@v2
      id: deploy_bicep
      with:
        name: 'main-deploy'
        type: deployment
        operation: create
        scope: resourceGroup
        subscription-id: ${{ fromJSON(secrets.AZURE_SCM_CREDS).subscriptionId }}
        resource-group-name: rg-${{ secrets.AZURE_SCM_WORKLOAD }}-uks
        template-file: ./workspace/self/iac/main.bicep
        parameters: >
          {
            "apiContainerImage": ${{ env.API_CONTAINER }}
          }

    - name: Extract ui content
      run: |
        docker pull $UI_CONTAINER
        cid=$(docker create $UI_CONTAINER)
        docker cp $cid:/usr/share/nginx/html ./swa-content
        docker rm -v $cid

    - name: Update config
      env:
        API_APP_URL: ${{ steps.deploy_bicep.outputs.apiAppUrl }}
      run: |
        cat > ./swa-content/browser/env.js << EOF
        window.__env = {
          apiUrl: '${API_APP_URL}'
        }; EOF

    - name: Get Static Web Apps deploy token
      run: |
        deployToken=$(az staticwebapp secrets list -n ${{ steps.deploy_bicep.outputs.uiSwaName }} --query 'properties.apiKey' -o tsv)
        echo "::add-mask::$deployToken"
        echo DEPLOY_TOKEN=$deployToken >> $GITHUB_ENV

    - name: Deploy ui
      uses: Azure/static-web-apps-deploy@v1
      env:
        DEPLOY_TOKEN: ${{ env.DEPLOY_TOKEN }}
      with:
        action: "upload"
        azure_static_web_apps_api_token: ${{ env.DEPLOY_TOKEN }}
        app_location: "swa-content"
        skip_app_build: true

    - name: Post-deployment verification
      run: |
        # TODO: Health checks, smoke tests, etc.
        echo "üîç Running post-deployment checks..."
        echo "‚úÖ Deployment verification complete"
