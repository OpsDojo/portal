// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.Infrastructure.EF;

#nullable disable

namespace Portal.Infrastructure.EF.Migrations
{
    [DbContext(typeof(PortalDbContext))]
    [Migration("20251025073625_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Portal.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTimeOffset>("Joined")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Portal.Domain.Entities.WeightLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "Date")
                        .IsUnique();

                    b.ToTable("WeightLogs", (string)null);
                });

            modelBuilder.Entity("Portal.Domain.Entities.WeightLog", b =>
                {
                    b.HasOne("Portal.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Portal.Domain.ValueObjects.Weight", "Weight", b1 =>
                        {
                            b1.Property<Guid>("WeightLogId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Kg")
                                .HasColumnType("decimal(10,6)")
                                .HasColumnName("WeightKg");

                            b1.Property<decimal>("WeightLbs")
                                .ValueGeneratedOnAddOrUpdate()
                                .HasColumnType("decimal(10,6)")
                                .HasColumnName("WeightLbs")
                                .HasComputedColumnSql("CAST([WeightKg] / 0.45359237 AS decimal(10,6))", true);

                            b1.Property<decimal>("WeightStone")
                                .ValueGeneratedOnAddOrUpdate()
                                .HasColumnType("decimal(10,6)")
                                .HasColumnName("WeightStone")
                                .HasComputedColumnSql("CAST([WeightKg] / 6.35029318 AS decimal(10,6))", true);

                            b1.HasKey("WeightLogId");

                            b1.ToTable("WeightLogs");

                            b1.WithOwner()
                                .HasForeignKey("WeightLogId");
                        });

                    b.Navigation("User");

                    b.Navigation("Weight")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
